.scanline-transition {
	position: relative;

	overflow-x: visible;
	/* this is to avoid some weird but the produces a horizontal scroll when overflow x is visible bu y is hidden */
	overflow-y: clip;
	
	--transition-scanline_pos: 0;
	--transition-scanline_color: var(--color2);
	--transition-scanline_background-color: transparent; 
	--transition-scanline_width: 1.5px;
	--transition-scanline_height: 100%;
	--transition-scanline_opacity: 1;

	--transition-scanline_color-rgb: from var(--transition-scanline_color) r g b;

	--transition-scanline_color-highlight: hsl(
		from var(--transition-scanline_color) h s calc(l + 20)
	);

	--transition-scanline_color-highlight-rgb: from var(--transition-scanline_color-highlight) r g b;

	--effect-position-start: -2px;
	--effect-position-end: 2px;
	--effect-position-delta: calc(var(--effect-position-end) - var(--effect-position-start));
	--effect-position: calc(var(--effect-position-start) + var(--transition-scanline_pos) * (100% + var(--effect-position-delta)));
}

/* Scanline */
.scanline-transition::after {
	content: '';
	position: absolute;
	height: 100%;
	width: var(--transition-scanline_width);
	pointer-events: none;

	background-color: var(--transition-scanline_color);

	top: 0;

	left: var(--effect-position);

	opacity: var(--transition-scanline_opacity);

	animation: glow 0.5s linear infinite alternate;

	transition: opacity 0.2s linear;
}

/* "Clipping path" in the background */
.scanline-transition::before {
	content: '';
	position: absolute;
	pointer-events: none;
	
	/* Covers the whole element */
	inset: -2px;          
	background-color: var(--transition-scanline_background-color);
	transform-origin: top;
	transform-box: border-box;

	clip-path: inset(0 calc(100% - var(--effect-position)) 0 0);
}

@keyframes glow {
	0% {
		filter: drop-shadow(0 0 2px rgb(var(--transition-scanline_color-rgb) / 0.7))
				drop-shadow(0 0 2px rgb(var(--transition-scanline_color-rgb) / 0.6))
				drop-shadow(0 0 4px rgb(var(--transition-scanline_color-rgb) / 0.5));

		background-color: var(--transition-scanline_color);
	}

	100% {
		filter: drop-shadow(0 0 2px rgb(var(--transition-scanline_color-highlight-rgb) / 0.9))
				drop-shadow(0 0 2px rgb(var(--transition-scanline_color-rgb) / 0.8))
				drop-shadow(0 0 4px rgb(var(--transition-scanline_color-rgb) / 0.7))
				drop-shadow(0 0 10px rgb(var(--transition-scanline_color-rgb) / 0.7))
				saturate(1.4);

		background-color: var(--transition-scanline_color-highlight);
	}
}


@keyframes jitter {
	0%   { transform: translate3d(  0px,   0px, 0); }
	20%  { transform: translate3d( .25px, -.20px, 0); }
	40%  { transform: translate3d(-.20px,  .15px, 0); }
	60%  { transform: translate3d( .30px,  .10px, 0); }
	80%  { transform: translate3d(-.15px, -.25px, 0); }
	100% { transform: translate3d(  0px,   0px, 0); }
}